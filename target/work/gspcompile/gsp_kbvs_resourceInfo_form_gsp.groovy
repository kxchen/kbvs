import com.panda.kbvs.ResourceInfo
import org.codehaus.groovy.grails.plugins.metadata.GrailsPlugin
import org.codehaus.groovy.grails.web.pages.GroovyPage
import org.codehaus.groovy.grails.web.taglib.*
import org.codehaus.groovy.grails.web.taglib.exceptions.GrailsTagException
import org.springframework.web.util.*
import grails.util.GrailsUtil

class gsp_kbvs_resourceInfo_form_gsp extends GroovyPage {
public String getGroovyPageFileName() { "/WEB-INF/grails-app/views/resourceInfo/_form.gsp" }
public Object run() {
Writer out = getOut()
Writer expressionOut = getExpressionOut()
registerSitemeshPreprocessMode()
printHtmlPart(0)
expressionOut.print(hasErrors(bean: resourceInfoInstance, field: 'metadata', 'error'))
printHtmlPart(1)
invokeTag('message','g',7,['code':("resourceInfo.metadata.label"),'default':("Metadata")],-1)
printHtmlPart(2)
invokeTag('textField','g',10,['name':("metadata"),'value':(resourceInfoInstance?.metadata)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: resourceInfoInstance, field: 'MD5', 'error'))
printHtmlPart(4)
invokeTag('message','g',16,['code':("resourceInfo.MD5.label"),'default':("MD 5")],-1)
printHtmlPart(2)
invokeTag('textField','g',19,['name':("MD5"),'value':(resourceInfoInstance?.MD5)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: resourceInfoInstance, field: 'creationDate', 'error'))
printHtmlPart(5)
invokeTag('message','g',25,['code':("resourceInfo.creationDate.label"),'default':("Creation Date")],-1)
printHtmlPart(2)
invokeTag('textField','g',28,['name':("creationDate"),'value':(resourceInfoInstance?.creationDate)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: resourceInfoInstance, field: 'preImgPath', 'error'))
printHtmlPart(6)
invokeTag('message','g',34,['code':("resourceInfo.preImgPath.label"),'default':("Pre Img Path")],-1)
printHtmlPart(2)
invokeTag('textField','g',37,['name':("preImgPath"),'value':(resourceInfoInstance?.preImgPath)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: resourceInfoInstance, field: 'artist', 'error'))
printHtmlPart(7)
invokeTag('message','g',43,['code':("resourceInfo.artist.label"),'default':("Artist")],-1)
printHtmlPart(2)
invokeTag('textField','g',46,['name':("artist"),'value':(resourceInfoInstance?.artist)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: resourceInfoInstance, field: 'special', 'error'))
printHtmlPart(8)
invokeTag('message','g',52,['code':("resourceInfo.special.label"),'default':("Special")],-1)
printHtmlPart(2)
invokeTag('textField','g',55,['name':("special"),'value':(resourceInfoInstance?.special)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: resourceInfoInstance, field: 'genre', 'error'))
printHtmlPart(9)
invokeTag('message','g',61,['code':("resourceInfo.genre.label"),'default':("Genre")],-1)
printHtmlPart(2)
invokeTag('textField','g',64,['name':("genre"),'value':(resourceInfoInstance?.genre)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: resourceInfoInstance, field: 'pdfPath', 'error'))
printHtmlPart(10)
invokeTag('message','g',70,['code':("resourceInfo.pdfPath.label"),'default':("Pdf Path")],-1)
printHtmlPart(2)
invokeTag('textField','g',73,['name':("pdfPath"),'value':(resourceInfoInstance?.pdfPath)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: resourceInfoInstance, field: 'swfPath', 'error'))
printHtmlPart(11)
invokeTag('message','g',79,['code':("resourceInfo.swfPath.label"),'default':("Swf Path")],-1)
printHtmlPart(2)
invokeTag('textField','g',82,['name':("swfPath"),'value':(resourceInfoInstance?.swfPath)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: resourceInfoInstance, field: 'author', 'error'))
printHtmlPart(12)
invokeTag('message','g',88,['code':("resourceInfo.author.label"),'default':("Author")],-1)
printHtmlPart(2)
invokeTag('textField','g',91,['name':("author"),'value':(resourceInfoInstance?.author)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: resourceInfoInstance, field: 'encoding', 'error'))
printHtmlPart(13)
invokeTag('message','g',97,['code':("resourceInfo.encoding.label"),'default':("Encoding")],-1)
printHtmlPart(2)
invokeTag('textField','g',100,['name':("encoding"),'value':(resourceInfoInstance?.encoding)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: resourceInfoInstance, field: 'content', 'error'))
printHtmlPart(14)
invokeTag('message','g',106,['code':("resourceInfo.content.label"),'default':("Content")],-1)
printHtmlPart(2)
invokeTag('textField','g',109,['name':("content"),'value':(resourceInfoInstance?.content)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: resourceInfoInstance, field: 'isSwfDone', 'error'))
printHtmlPart(15)
invokeTag('message','g',115,['code':("resourceInfo.isSwfDone.label"),'default':("Is Swf Done")],-1)
printHtmlPart(16)
invokeTag('field','g',118,['name':("isSwfDone"),'type':("number"),'value':(resourceInfoInstance.isSwfDone),'required':("")],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: resourceInfoInstance, field: 'isPdfDone', 'error'))
printHtmlPart(17)
invokeTag('message','g',124,['code':("resourceInfo.isPdfDone.label"),'default':("Is Pdf Done")],-1)
printHtmlPart(16)
invokeTag('field','g',127,['name':("isPdfDone"),'type':("number"),'value':(resourceInfoInstance.isPdfDone),'required':("")],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: resourceInfoInstance, field: 'convertName', 'error'))
printHtmlPart(18)
invokeTag('message','g',133,['code':("resourceInfo.convertName.label"),'default':("Convert Name")],-1)
printHtmlPart(16)
invokeTag('textField','g',136,['name':("convertName"),'required':(""),'value':(resourceInfoInstance?.convertName)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: resourceInfoInstance, field: 'extName', 'error'))
printHtmlPart(19)
invokeTag('message','g',142,['code':("resourceInfo.extName.label"),'default':("Ext Name")],-1)
printHtmlPart(16)
invokeTag('textField','g',145,['name':("extName"),'required':(""),'value':(resourceInfoInstance?.extName)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: resourceInfoInstance, field: 'fileSize', 'error'))
printHtmlPart(20)
invokeTag('message','g',151,['code':("resourceInfo.fileSize.label"),'default':("File Size")],-1)
printHtmlPart(16)
invokeTag('textField','g',154,['name':("fileSize"),'required':(""),'value':(resourceInfoInstance?.fileSize)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: resourceInfoInstance, field: 'name', 'error'))
printHtmlPart(21)
invokeTag('message','g',160,['code':("resourceInfo.name.label"),'default':("Name")],-1)
printHtmlPart(16)
invokeTag('textField','g',163,['name':("name"),'required':(""),'value':(resourceInfoInstance?.name)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: resourceInfoInstance, field: 'ownerId', 'error'))
printHtmlPart(22)
invokeTag('message','g',169,['code':("resourceInfo.ownerId.label"),'default':("Owner Id")],-1)
printHtmlPart(16)
invokeTag('textField','g',172,['name':("ownerId"),'required':(""),'value':(resourceInfoInstance?.ownerId)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: resourceInfoInstance, field: 'path', 'error'))
printHtmlPart(23)
invokeTag('message','g',178,['code':("resourceInfo.path.label"),'default':("Path")],-1)
printHtmlPart(16)
invokeTag('textField','g',181,['name':("path"),'required':(""),'value':(resourceInfoInstance?.path)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: resourceInfoInstance, field: 'type', 'error'))
printHtmlPart(24)
invokeTag('message','g',187,['code':("resourceInfo.type.label"),'default':("Type")],-1)
printHtmlPart(16)
invokeTag('textField','g',190,['name':("type"),'required':(""),'value':(resourceInfoInstance?.type)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: resourceInfoInstance, field: 'userId', 'error'))
printHtmlPart(25)
invokeTag('message','g',196,['code':("resourceInfo.userId.label"),'default':("User Id")],-1)
printHtmlPart(16)
invokeTag('textField','g',199,['name':("userId"),'required':(""),'value':(resourceInfoInstance?.userId)],-1)
printHtmlPart(26)
}
public static final Map JSP_TAGS = new HashMap()
protected void init() {
	this.jspTags = JSP_TAGS
}
public static final String CONTENT_TYPE = 'text/html;charset=UTF-8'
public static final long LAST_MODIFIED = 1462275597066L
public static final String EXPRESSION_CODEC = 'html'
public static final String STATIC_CODEC = 'none'
public static final String OUT_CODEC = 'html'
public static final String TAGLIB_CODEC = 'none'
}
